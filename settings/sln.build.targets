<Project TreatAsLocalProperty="_CopyrightYearStart;_NetEvolveDefaults">
  <Target
    Name="ValidateOldCompatibilityPackages"
    BeforeTargets="DispatchToInnerBuilds;BeforeBuild">

    <Error
      Code="OLD001"
      Text="Compatibility packages has been retired. Please use NuGet `Polyfill`."
      File="$(MSBuildProjectFile)"
      Condition="'$(DisableCompatibility)' != '' or '$(DisableNullableCompatibility)' != '' or '$(CompatibilityPlatform)' != '' or '$(CompatibilityModuleInitializer)' != '' or '$(CompatibilityCallerArgumentExpression)' != '' or '$(CompatibilityRecord)' != '' or '$(CompatibilityRange)' != '' or '$(CompatibilitySkipLocalsInit)' != '' or '$(CompatibilityStackTraceHidden)' != '' or '$(CompatibilityStringSyntax)' != '' or '$(CompatibilityRequiredMember)' != '' or '$(CompatibilityUnreachableException)' != ''" />
  </Target>

  <Target
    Name="DefaultsReplacedWithPackage"
    BeforeTargets="DispatchToInnerBuilds;BeforeBuild"
    Condition=" $(MSBuildProjectName.StartsWith('NetEvolve.Defaults')) == 'false' ">

    <ItemGroup>
      <_NetEvolveDefaults Include="@(PackageReference)" Condition=" %(PackageReference.Identity) == 'NetEvolve.Defaults'"  />
    </ItemGroup>

    <Error
      Code="OLD002"
      Text="Missing NuGet package reference to `NetEvolve.Defaults`. This package will replace `eng` folder."
      File="$(MSBuildProjectFile)"
      Condition="@(_NetEvolveDefaults->Count()) == 0" />
  </Target>

  <Target
    Name="EngIsOld"
    BeforeTargets="DispatchToInnerBuilds;BeforeBuild">

    <Error
      Code="OLD003"
      Text="The engineering submodule is obsolete, please use `NetEvolve.Defaults` and remove all references to the submodule `eng`."
      File="$(MSBuildProjectFile)" />

  </Target>

  <PropertyGroup>
    <DisableBannedApiForConsole Condition="'$(DisableBannedApiForConsole)' != 'true'">false</DisableBannedApiForConsole>
    <DisableBannedApiForPerformance Condition="'$(DisableBannedApiForPerformance)' != 'true'">false</DisableBannedApiForPerformance>
    <DisableBannedApiForUTC Condition="'$(DisableBannedApiForUTC)' != 'true'">false</DisableBannedApiForUTC>
  </PropertyGroup>

  <ItemGroup>
    <!-- Support for Microsoft.CodeAnalysis.BannedApiAnalyzers -->
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.txt" Visible="false" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.Console.txt" Visible="false" Condition="'$(DisableBannedApiForConsole)' == 'false'" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.Performance.txt" Visible="false" Condition="'$(DisableBannedApiForPerformance)' == 'false'" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.UTC.txt" Visible="false" Condition="'$(DisableBannedApiForUTC)' == 'false'" />
  </ItemGroup>

</Project>
