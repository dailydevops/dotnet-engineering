<Project TreatAsLocalProperty="_CopyrightYearStart;_NetEvolveDefaults">
  <Target
    Name="ValidateOldCompatibilityPackages"
    BeforeTargets="DispatchToInnerBuilds;BeforeBuild">

    <Error
      Code="OLD001"
      Text="Compatibility packages has been retired. Please use NuGet `Polyfill`."
      File="$(MSBuildProjectFile)"
      Condition="'$(DisableCompatibility)' != '' or '$(DisableNullableCompatibility)' != '' or '$(CompatibilityPlatform)' != '' or '$(CompatibilityModuleInitializer)' != '' or '$(CompatibilityCallerArgumentExpression)' != '' or '$(CompatibilityRecord)' != '' or '$(CompatibilityRange)' != '' or '$(CompatibilitySkipLocalsInit)' != '' or '$(CompatibilityStackTraceHidden)' != '' or '$(CompatibilityStringSyntax)' != '' or '$(CompatibilityRequiredMember)' != '' or '$(CompatibilityUnreachableException)' != ''" />
  </Target>

  <Target
    Name="DefaultsReplacedWithPackage"
    BeforeTargets="DispatchToInnerBuilds;BeforeBuild"
    Condition=" $(MSBuildProjectName.StartsWith('NetEvolve.Defaults')) == 'false' ">

    <ItemGroup>
      <_NetEvolveDefaults Include="@(PackageReference)" Condition=" %(PackageReference.Identity) == 'NetEvolve.Defaults'"  />
    </ItemGroup>

    <Error
      Code="OLD002"
      Text="Missing NuGet package reference to `NetEvolve.Defaults`. This package will replace `eng` folder. @(_NetEvolveDefaults->Count()) == 0"
      File="$(MSBuildProjectFile)"
      Condition="@(_NetEvolveDefaults->Count()) == 0" />
  </Target>

  <PropertyGroup Label="CopyrightAutomation" Condition="'$(Copyright)' == ''">
    <_CopyrightYearStart Condition="'$(CopyrightYearStart)' == ''">$([System.DateTime]::Now.Year)</_CopyrightYearStart>
    <_CopyrightYearStart Condition="'$(CopyrightYearStart)' != ''">$(CopyrightYearStart)</_CopyrightYearStart>
    <CopyrightYear>$([System.DateTime]::Now.Year)</CopyrightYear>
    <Copyright Condition="'$(CopyrightYear)' > '$(_CopyrightYearStart)'">Copyright @ $(Company) $(_CopyrightYearStart) - $(CopyrightYear)</Copyright>
    <Copyright Condition="'$(CopyrightYear)' == '$(_CopyrightYearStart)'">Copyright @ $(Company) $(_CopyrightYearStart)</Copyright>
  </PropertyGroup>

  <PropertyGroup Label="Properties correction">
    <IsTestProject Condition="'$(IsTestProject)' != 'true' and $(MSBuildProjectName.Contains('.Tests'))">true</IsTestProject>
    <IsTestProject Condition="'$(IsTestProject)' != 'true'">false</IsTestProject>
    <IsPackable Condition="'$(IsPackable)' != 'true' or '$(IsTestProject)' == 'true'">false</IsPackable>
  </PropertyGroup>

  <PropertyGroup Label="Build / Publish Settings" Condition="'$(IsCIBuild)' == 'true'">
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup>
    <DisableBannedApiForConsole Condition="'$(DisableBannedApiForConsole)' != 'true'">false</DisableBannedApiForConsole>
    <DisableBannedApiForPerformance Condition="'$(DisableBannedApiForPerformance)' != 'true'">false</DisableBannedApiForPerformance>
    <DisableBannedApiForUTC Condition="'$(DisableBannedApiForUTC)' != 'true'">false</DisableBannedApiForUTC>
  </PropertyGroup>

  <ItemGroup>
    <!-- Support for Microsoft.CodeAnalysis.BannedApiAnalyzers -->
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.txt" Visible="false" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.Console.txt" Visible="false" Condition="'$(DisableBannedApiForConsole)' == 'false'" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.Performance.txt" Visible="false" Condition="'$(DisableBannedApiForPerformance)' == 'false'" />
    <AdditionalFiles Include="$(DirEngineeringConfigurations)BannedSymbols.UTC.txt" Visible="false" Condition="'$(DisableBannedApiForUTC)' == 'false'" />

    <!-- Support for .editorconfig / https://EditorConfig.org -->
    <EditorConfigFiles Include="$(DirEngineeringConfigurations)global.editorconfig" Visible="false" />
  </ItemGroup>

  <PropertyGroup Condition="'$(RepositoryBranch)' == '' and '$(PublishRepositoryUrl)' == 'true' and '$(IsCIBuild)' == 'true'">
    <!-- GitHub Actions: https://docs.github.com/en/actions/reference/environment-variables#default-environment-variables -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(GITHUB_REF)' != '' and $(GITHUB_REF.Contains('refs/pull/'))">pr$(GITHUB_REF.Replace('refs/pull/', '').Replace('/merge', ''))</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(GITHUB_REF)' != ''">$(GITHUB_REF.Replace('refs/heads/', '').Replace('refs/tags/', ''))</RepositoryBranch>
    <!-- Azure DevOps: https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(BUILD_SOURCEBRANCH)' != ''">$(BUILD_SOURCEBRANCH.Replace('refs/heads/', '').Replace('refs/tags/', ''))</RepositoryBranch>
    <!-- AppVeyor: https://www.appveyor.com/docs/environment-variables/ -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(APPVEYOR_PULL_REQUEST_NUMBER)' != ''">pr$(APPVEYOR_PULL_REQUEST_NUMBER)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(APPVEYOR_REPO_TAG_NAME)' != ''">$(APPVEYOR_REPO_TAG_NAME)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(APPVEYOR_REPO_BRANCH)' != ''">$(APPVEYOR_REPO_BRANCH)</RepositoryBranch>
    <!-- TeamCity: https://www.jetbrains.com/help/teamcity/predefined-build-parameters.html#Branch-Related+Parameters -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(TEAMCITY_BUILD_BRANCH)' != ''">$(TEAMCITY_BUILD_BRANCH)</RepositoryBranch>
    <!--TravisCI: https://docs.travis-ci.com/user/environment-variables/ -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(TRAVIS_PULL_REQUEST)' != '' and '$(TRAVIS_PULL_REQUEST)' != 'false'">pr$(TRAVIS_PULL_REQUEST)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(TRAVIS_BRANCH)' != ''">$(TRAVIS_BRANCH)</RepositoryBranch>
    <!-- CircleCI: https://circleci.com/docs/2.0/env-vars/ -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CIRCLE_PR_NUMBER)' != ''">pr$(CIRCLE_PR_NUMBER)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CIRCLE_TAG)' != ''">$(CIRCLE_TAG)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CIRCLE_BRANCH)' != ''">$(CIRCLE_BRANCH)</RepositoryBranch>
    <!-- GitLab: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CI_COMMIT_TAG)' != ''">$(CI_COMMIT_TAG)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CI_MERGE_REQUEST_IID)' != ''">pr$(CI_MERGE_REQUEST_IID)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CI_EXTERNAL_PULL_REQUEST_IID)' != ''">pr$(CI_EXTERNAL_PULL_REQUEST_IID)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(CI_COMMIT_BRANCH)' != ''">$(CI_COMMIT_BRANCH)</RepositoryBranch>
    <!-- Buddy: https://buddy.works/docs/pipelines/environment-variables#default-environment-variables -->
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(BUDDY_EXECUTION_PULL_REQUEST_NO)' != ''">pr$(BUDDY_EXECUTION_PULL_REQUEST_NO)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(BUDDY_EXECUTION_TAG)' != ''">$(BUDDY_EXECUTION_TAG)</RepositoryBranch>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == '' and '$(BUDDY_EXECUTION_BRANCH)' != ''">$(BUDDY_EXECUTION_BRANCH)</RepositoryBranch>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('RemoveSystemRuntimeFromRefPack.targets', '$(DirEngineeringTargets)'))" />

</Project>
